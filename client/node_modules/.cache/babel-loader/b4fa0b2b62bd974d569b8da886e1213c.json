{"ast":null,"code":"var _jsxFileName = \"/Users/roronoazoro/Desktop/collabEase-OJT/client/src/components/KanbanBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { FaPlus, FaEllipsisH, FaTrash, FaTimes, FaPaperclip, FaCheckCircle, FaClock, FaUser, FaFlag } from 'react-icons/fa';\nimport '../styles/KanbanBoard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst KanbanBoard = _ref => {\n  _s();\n\n  let {\n    tasks,\n    statuses,\n    onTaskMove,\n    onTaskCreate,\n    onTaskUpdate,\n    onTaskDelete,\n    onStatusCreate,\n    users\n  } = _ref;\n  const [draggedTask, setDraggedTask] = useState(null);\n  const [showAddTask, setShowAddTask] = useState(null);\n  const [newTaskData, setNewTaskData] = useState({\n    title: '',\n    description: '',\n    assignedTo: null,\n    priority: 'Medium',\n    dueDate: ''\n  });\n  const [showAddColumn, setShowAddColumn] = useState(false);\n  const [newColumnTitle, setNewColumnTitle] = useState('');\n  const [taskMenuOpen, setTaskMenuOpen] = useState(null);\n  const [editingTask, setEditingTask] = useState(null);\n  const dragItem = useRef();\n  const dragNode = useRef(); // Handle drag start\n\n  const handleDragStart = (e, taskId, status) => {\n    dragItem.current = {\n      taskId,\n      status\n    };\n    dragNode.current = e.target;\n    dragNode.current.addEventListener('dragend', handleDragEnd);\n    setTimeout(() => {\n      setDraggedTask(taskId);\n    }, 0);\n    e.dataTransfer.setData('text/plain', taskId);\n    e.dataTransfer.effectAllowed = 'move';\n  }; // Handle drag end\n\n\n  const handleDragEnd = () => {\n    setDraggedTask(null);\n    dragNode.current.removeEventListener('dragend', handleDragEnd);\n    dragItem.current = null;\n    dragNode.current = null;\n  }; // Handle drag over\n\n\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  }; // Handle drop\n\n\n  const handleDrop = (e, columnStatus) => {\n    e.preventDefault();\n    const taskId = parseInt(e.dataTransfer.getData('text/plain'));\n    const sourceStatus = dragItem.current.status;\n\n    if (sourceStatus !== columnStatus) {\n      onTaskMove(taskId, columnStatus);\n    }\n\n    setDraggedTask(null);\n  }; // Handle new task submission\n\n\n  const handleAddTask = status => {\n    if (!newTaskData.title.trim()) return;\n    const task = { ...newTaskData,\n      status,\n      id: Date.now(),\n      // temporary ID until backend assigns one\n      subtasks: [],\n      attachments: [],\n      history: [{\n        action: 'created',\n        timestamp: new Date().toISOString()\n      }]\n    };\n    onTaskCreate(task);\n    setNewTaskData({\n      title: '',\n      description: '',\n      assignedTo: null,\n      priority: 'Medium',\n      dueDate: ''\n    });\n    setShowAddTask(null);\n  }; // Handle new column/status creation\n\n\n  const handleAddColumn = () => {\n    if (!newColumnTitle.trim()) return;\n    onStatusCreate(newColumnTitle);\n    setNewColumnTitle('');\n    setShowAddColumn(false);\n  }; // Get priority class\n\n\n  const getPriorityClass = priority => {\n    switch (priority === null || priority === void 0 ? void 0 : priority.toLowerCase()) {\n      case 'high':\n        return 'priority-high';\n\n      case 'low':\n        return 'priority-low';\n\n      default:\n        return 'priority-medium';\n    }\n  }; // Get the color for due date\n\n\n  const getDueDateClass = dueDate => {\n    if (!dueDate) return '';\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const due = new Date(dueDate);\n    due.setHours(0, 0, 0, 0);\n    const diffTime = due - today;\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    if (diffDays < 0) return 'date-overdue';\n    if (diffDays === 0) return 'date-today';\n    if (diffDays <= 2) return 'date-soon';\n    return '';\n  }; // Handle task update\n\n\n  const handleTaskUpdate = task => {\n    onTaskUpdate(task);\n    setEditingTask(null);\n  }; // Format date for display\n\n\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: [statuses.map(status => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, status),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-column-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"task-count\",\n            children: tasks.filter(t => t.status === status).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-task-button\",\n            onClick: () => setShowAddTask(status),\n            \"aria-label\": \"Add task\",\n            children: /*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-container\",\n          children: [tasks.filter(task => task.status === status).map(task => {\n            var _users$find, _users$find2, _users$find3, _task$attachments, _task$subtasks;\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `task-card ${draggedTask === task.id ? 'dragging' : ''}`,\n              draggable: true,\n              onDragStart: e => handleDragStart(e, task.id, status),\n              children: editingTask === task.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-edit-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: task.title,\n                  onChange: e => onTaskUpdate({ ...task,\n                    title: e.target.value\n                  }),\n                  className: \"task-edit-title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: task.description || '',\n                  onChange: e => onTaskUpdate({ ...task,\n                    description: e.target.value\n                  }),\n                  className: \"task-edit-description\",\n                  placeholder: \"Add description...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-edit-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Assigned to:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: task.assignedTo || '',\n                    onChange: e => onTaskUpdate({ ...task,\n                      assignedTo: e.target.value ? parseInt(e.target.value) : null\n                    }),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Unassigned\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 29\n                    }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: user.id,\n                      children: user.name\n                    }, user.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 31\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-edit-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Priority:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: task.priority || 'Medium',\n                    onChange: e => onTaskUpdate({ ...task,\n                      priority: e.target.value\n                    }),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Low\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Medium\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"High\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-edit-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Due date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"date\",\n                    value: task.dueDate || '',\n                    onChange: e => onTaskUpdate({ ...task,\n                      dueDate: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-edit-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"save-task-btn\",\n                    onClick: () => setEditingTask(null),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"cancel-edit-btn\",\n                    onClick: () => setEditingTask(null),\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `task-priority ${getPriorityClass(task.priority)}`,\n                    children: /*#__PURE__*/_jsxDEV(FaFlag, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-menu-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"task-menu-button\",\n                      onClick: () => setTaskMenuOpen(taskMenuOpen === task.id ? null : task.id),\n                      \"aria-label\": \"Task menu\",\n                      children: /*#__PURE__*/_jsxDEV(FaEllipsisH, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 240,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 29\n                    }, this), taskMenuOpen === task.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"task-menu\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => setEditingTask(task.id),\n                        children: \"Edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"delete-btn\",\n                        onClick: () => onTaskDelete(task.id),\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"task-title\",\n                  children: task.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 25\n                }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"task-description\",\n                  children: task.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-footer\",\n                  children: [task.dueDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `task-due-date ${getDueDateClass(task.dueDate)}`,\n                    children: [/*#__PURE__*/_jsxDEV(FaClock, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: formatDate(task.dueDate)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 29\n                  }, this), task.assignedTo ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-assignee\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: ((_users$find = users.find(u => u.id === task.assignedTo)) === null || _users$find === void 0 ? void 0 : _users$find.avatar) || `https://ui-avatars.com/api/?name=${encodeURIComponent(((_users$find2 = users.find(u => u.id === task.assignedTo)) === null || _users$find2 === void 0 ? void 0 : _users$find2.name) || 'User')}`,\n                      alt: (_users$find3 = users.find(u => u.id === task.assignedTo)) === null || _users$find3 === void 0 ? void 0 : _users$find3.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-unassigned\",\n                    children: /*#__PURE__*/_jsxDEV(FaUser, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 29\n                  }, this), ((_task$attachments = task.attachments) === null || _task$attachments === void 0 ? void 0 : _task$attachments.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-attachments\",\n                    children: [/*#__PURE__*/_jsxDEV(FaPaperclip, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: task.attachments.length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 29\n                  }, this), ((_task$subtasks = task.subtasks) === null || _task$subtasks === void 0 ? void 0 : _task$subtasks.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-subtasks\",\n                    children: [/*#__PURE__*/_jsxDEV(FaCheckCircle, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [task.subtasks.filter(s => s.done).length, \"/\", task.subtasks.length]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this);\n          }), showAddTask === status && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-task-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Task title\",\n              value: newTaskData.title,\n              onChange: e => setNewTaskData({ ...newTaskData,\n                title: e.target.value\n              }),\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Description\",\n              value: newTaskData.description,\n              onChange: e => setNewTaskData({ ...newTaskData,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Assigned to:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTaskData.assignedTo || '',\n                onChange: e => setNewTaskData({ ...newTaskData,\n                  assignedTo: e.target.value ? parseInt(e.target.value) : null\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Unassigned\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 23\n                }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: user.id,\n                  children: user.name\n                }, user.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Priority:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTaskData.priority,\n                onChange: e => setNewTaskData({ ...newTaskData,\n                  priority: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Low\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"High\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Due date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: newTaskData.dueDate,\n                onChange: e => setNewTaskData({ ...newTaskData,\n                  dueDate: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"add-btn\",\n                onClick: () => handleAddTask(status),\n                children: \"Add Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancel-btn\",\n                onClick: () => setShowAddTask(null),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, status, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)), showAddColumn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column add-column-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Column title\",\n          value: newColumnTitle,\n          onChange: e => setNewColumnTitle(e.target.value),\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-column-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-btn\",\n            onClick: handleAddColumn,\n            children: \"Add Column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => setShowAddColumn(false),\n            children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column add-column\",\n        onClick: () => setShowAddColumn(true),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-column-button\",\n          children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n\n_s(KanbanBoard, \"jbvNaSs0Aof+2EOv0sH8SFUoofw=\");\n\n_c = KanbanBoard;\nexport default KanbanBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useRef","FaPlus","FaEllipsisH","FaTrash","FaTimes","FaPaperclip","FaCheckCircle","FaClock","FaUser","FaFlag","KanbanBoard","tasks","statuses","onTaskMove","onTaskCreate","onTaskUpdate","onTaskDelete","onStatusCreate","users","draggedTask","setDraggedTask","showAddTask","setShowAddTask","newTaskData","setNewTaskData","title","description","assignedTo","priority","dueDate","showAddColumn","setShowAddColumn","newColumnTitle","setNewColumnTitle","taskMenuOpen","setTaskMenuOpen","editingTask","setEditingTask","dragItem","dragNode","handleDragStart","e","taskId","status","current","target","addEventListener","handleDragEnd","setTimeout","dataTransfer","setData","effectAllowed","removeEventListener","handleDragOver","preventDefault","dropEffect","handleDrop","columnStatus","parseInt","getData","sourceStatus","handleAddTask","trim","task","id","Date","now","subtasks","attachments","history","action","timestamp","toISOString","handleAddColumn","getPriorityClass","toLowerCase","getDueDateClass","today","setHours","due","diffTime","diffDays","Math","ceil","handleTaskUpdate","formatDate","dateString","date","toLocaleDateString","month","day","map","filter","t","length","value","user","name","find","u","avatar","encodeURIComponent","s","done"],"sources":["/Users/roronoazoro/Desktop/collabEase-OJT/client/src/components/KanbanBoard.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { FaPlus, FaEllipsisH, FaTrash, FaTimes, FaPaperclip, FaCheckCircle, FaClock, FaUser, FaFlag } from 'react-icons/fa';\nimport '../styles/KanbanBoard.css';\n\nconst KanbanBoard = ({ \n  tasks, \n  statuses, \n  onTaskMove, \n  onTaskCreate, \n  onTaskUpdate, \n  onTaskDelete,\n  onStatusCreate,\n  users\n}) => {\n  const [draggedTask, setDraggedTask] = useState(null);\n  const [showAddTask, setShowAddTask] = useState(null);\n  const [newTaskData, setNewTaskData] = useState({ title: '', description: '', assignedTo: null, priority: 'Medium', dueDate: '' });\n  const [showAddColumn, setShowAddColumn] = useState(false);\n  const [newColumnTitle, setNewColumnTitle] = useState('');\n  const [taskMenuOpen, setTaskMenuOpen] = useState(null);\n  const [editingTask, setEditingTask] = useState(null);\n  \n  const dragItem = useRef();\n  const dragNode = useRef();\n\n  // Handle drag start\n  const handleDragStart = (e, taskId, status) => {\n    dragItem.current = { taskId, status };\n    dragNode.current = e.target;\n    dragNode.current.addEventListener('dragend', handleDragEnd);\n    \n    setTimeout(() => {\n      setDraggedTask(taskId);\n    }, 0);\n    \n    e.dataTransfer.setData('text/plain', taskId);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n  \n  // Handle drag end\n  const handleDragEnd = () => {\n    setDraggedTask(null);\n    dragNode.current.removeEventListener('dragend', handleDragEnd);\n    dragItem.current = null;\n    dragNode.current = null;\n  };\n  \n  // Handle drag over\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n  \n  // Handle drop\n  const handleDrop = (e, columnStatus) => {\n    e.preventDefault();\n    \n    const taskId = parseInt(e.dataTransfer.getData('text/plain'));\n    const sourceStatus = dragItem.current.status;\n    \n    if (sourceStatus !== columnStatus) {\n      onTaskMove(taskId, columnStatus);\n    }\n    \n    setDraggedTask(null);\n  };\n  \n  // Handle new task submission\n  const handleAddTask = (status) => {\n    if (!newTaskData.title.trim()) return;\n    \n    const task = {\n      ...newTaskData,\n      status,\n      id: Date.now(), // temporary ID until backend assigns one\n      subtasks: [],\n      attachments: [],\n      history: [{ action: 'created', timestamp: new Date().toISOString() }]\n    };\n    \n    onTaskCreate(task);\n    setNewTaskData({ title: '', description: '', assignedTo: null, priority: 'Medium', dueDate: '' });\n    setShowAddTask(null);\n  };\n  \n  // Handle new column/status creation\n  const handleAddColumn = () => {\n    if (!newColumnTitle.trim()) return;\n    \n    onStatusCreate(newColumnTitle);\n    setNewColumnTitle('');\n    setShowAddColumn(false);\n  };\n  \n  // Get priority class\n  const getPriorityClass = (priority) => {\n    switch(priority?.toLowerCase()) {\n      case 'high': return 'priority-high';\n      case 'low': return 'priority-low';\n      default: return 'priority-medium';\n    }\n  };\n  \n  // Get the color for due date\n  const getDueDateClass = (dueDate) => {\n    if (!dueDate) return '';\n    \n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    \n    const due = new Date(dueDate);\n    due.setHours(0, 0, 0, 0);\n    \n    const diffTime = due - today;\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    \n    if (diffDays < 0) return 'date-overdue';\n    if (diffDays === 0) return 'date-today';\n    if (diffDays <= 2) return 'date-soon';\n    return '';\n  };\n  \n  // Handle task update\n  const handleTaskUpdate = (task) => {\n    onTaskUpdate(task);\n    setEditingTask(null);\n  };\n  \n  // Format date for display\n  const formatDate = (dateString) => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n  };\n  \n  return (\n    <div className=\"kanban-board-container\">\n      <div className=\"kanban-board\">\n        {statuses.map(status => (\n          <div \n            key={status} \n            className=\"kanban-column\"\n            onDragOver={handleDragOver}\n            onDrop={(e) => handleDrop(e, status)}\n          >\n            <div className=\"kanban-column-header\">\n              <h3>{status}</h3>\n              <span className=\"task-count\">{tasks.filter(t => t.status === status).length}</span>\n              <button \n                className=\"add-task-button\" \n                onClick={() => setShowAddTask(status)}\n                aria-label=\"Add task\"\n              >\n                <FaPlus />\n              </button>\n            </div>\n            \n            <div className=\"tasks-container\">\n              {tasks\n                .filter(task => task.status === status)\n                .map(task => (\n                  <div \n                    key={task.id}\n                    className={`task-card ${draggedTask === task.id ? 'dragging' : ''}`}\n                    draggable\n                    onDragStart={(e) => handleDragStart(e, task.id, status)}\n                  >\n                    {editingTask === task.id ? (\n                      <div className=\"task-edit-form\">\n                        <input\n                          type=\"text\"\n                          value={task.title}\n                          onChange={(e) => onTaskUpdate({ ...task, title: e.target.value })}\n                          className=\"task-edit-title\"\n                        />\n                        <textarea\n                          value={task.description || ''}\n                          onChange={(e) => onTaskUpdate({ ...task, description: e.target.value })}\n                          className=\"task-edit-description\"\n                          placeholder=\"Add description...\"\n                        />\n                        <div className=\"task-edit-row\">\n                          <label>Assigned to:</label>\n                          <select \n                            value={task.assignedTo || ''}\n                            onChange={(e) => onTaskUpdate({ ...task, assignedTo: e.target.value ? parseInt(e.target.value) : null })}\n                          >\n                            <option value=\"\">Unassigned</option>\n                            {users.map(user => (\n                              <option key={user.id} value={user.id}>{user.name}</option>\n                            ))}\n                          </select>\n                        </div>\n                        <div className=\"task-edit-row\">\n                          <label>Priority:</label>\n                          <select\n                            value={task.priority || 'Medium'}\n                            onChange={(e) => onTaskUpdate({ ...task, priority: e.target.value })}\n                          >\n                            <option>Low</option>\n                            <option>Medium</option>\n                            <option>High</option>\n                          </select>\n                        </div>\n                        <div className=\"task-edit-row\">\n                          <label>Due date:</label>\n                          <input\n                            type=\"date\"\n                            value={task.dueDate || ''}\n                            onChange={(e) => onTaskUpdate({ ...task, dueDate: e.target.value })}\n                          />\n                        </div>\n                        <div className=\"task-edit-actions\">\n                          <button \n                            className=\"save-task-btn\"\n                            onClick={() => setEditingTask(null)}\n                          >\n                            Save\n                          </button>\n                          <button \n                            className=\"cancel-edit-btn\"\n                            onClick={() => setEditingTask(null)}\n                          >\n                            Cancel\n                          </button>\n                        </div>\n                      </div>\n                    ) : (\n                      <>\n                        <div className=\"task-header\">\n                          <div className={`task-priority ${getPriorityClass(task.priority)}`}>\n                            <FaFlag />\n                          </div>\n                          <div className=\"task-menu-container\">\n                            <button \n                              className=\"task-menu-button\" \n                              onClick={() => setTaskMenuOpen(taskMenuOpen === task.id ? null : task.id)}\n                              aria-label=\"Task menu\"\n                            >\n                              <FaEllipsisH />\n                            </button>\n                            {taskMenuOpen === task.id && (\n                              <div className=\"task-menu\">\n                                <button onClick={() => setEditingTask(task.id)}>\n                                  Edit\n                                </button>\n                                <button className=\"delete-btn\" onClick={() => onTaskDelete(task.id)}>\n                                  Delete\n                                </button>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                        <h4 className=\"task-title\">{task.title}</h4>\n                        {task.description && (\n                          <p className=\"task-description\">{task.description}</p>\n                        )}\n                        <div className=\"task-footer\">\n                          {task.dueDate && (\n                            <div className={`task-due-date ${getDueDateClass(task.dueDate)}`}>\n                              <FaClock />\n                              <span>{formatDate(task.dueDate)}</span>\n                            </div>\n                          )}\n                          {task.assignedTo ? (\n                            <div className=\"task-assignee\">\n                              <img \n                                src={users.find(u => u.id === task.assignedTo)?.avatar || `https://ui-avatars.com/api/?name=${encodeURIComponent(users.find(u => u.id === task.assignedTo)?.name || 'User')}`} \n                                alt={users.find(u => u.id === task.assignedTo)?.name} \n                              />\n                            </div>\n                          ) : (\n                            <div className=\"task-unassigned\">\n                              <FaUser />\n                            </div>\n                          )}\n                          {task.attachments?.length > 0 && (\n                            <div className=\"task-attachments\">\n                              <FaPaperclip />\n                              <span>{task.attachments.length}</span>\n                            </div>\n                          )}\n                          {task.subtasks?.length > 0 && (\n                            <div className=\"task-subtasks\">\n                              <FaCheckCircle />\n                              <span>{task.subtasks.filter(s => s.done).length}/{task.subtasks.length}</span>\n                            </div>\n                          )}\n                        </div>\n                      </>\n                    )}\n                  </div>\n                ))}\n              \n              {showAddTask === status && (\n                <div className=\"add-task-form\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Task title\"\n                    value={newTaskData.title}\n                    onChange={(e) => setNewTaskData({...newTaskData, title: e.target.value})}\n                    autoFocus\n                  />\n                  <textarea\n                    placeholder=\"Description\"\n                    value={newTaskData.description}\n                    onChange={(e) => setNewTaskData({...newTaskData, description: e.target.value})}\n                  />\n                  <div className=\"form-row\">\n                    <label>Assigned to:</label>\n                    <select \n                      value={newTaskData.assignedTo || ''}\n                      onChange={(e) => setNewTaskData({...newTaskData, assignedTo: e.target.value ? parseInt(e.target.value) : null})}\n                    >\n                      <option value=\"\">Unassigned</option>\n                      {users.map(user => (\n                        <option key={user.id} value={user.id}>{user.name}</option>\n                      ))}\n                    </select>\n                  </div>\n                  <div className=\"form-row\">\n                    <label>Priority:</label>\n                    <select\n                      value={newTaskData.priority}\n                      onChange={(e) => setNewTaskData({...newTaskData, priority: e.target.value})}\n                    >\n                      <option>Low</option>\n                      <option>Medium</option>\n                      <option>High</option>\n                    </select>\n                  </div>\n                  <div className=\"form-row\">\n                    <label>Due date:</label>\n                    <input\n                      type=\"date\"\n                      value={newTaskData.dueDate}\n                      onChange={(e) => setNewTaskData({...newTaskData, dueDate: e.target.value})}\n                    />\n                  </div>\n                  <div className=\"form-actions\">\n                    <button \n                      className=\"add-btn\"\n                      onClick={() => handleAddTask(status)}\n                    >\n                      Add Task\n                    </button>\n                    <button \n                      className=\"cancel-btn\"\n                      onClick={() => setShowAddTask(null)}\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n        \n        {/* Add new column section */}\n        {showAddColumn ? (\n          <div className=\"kanban-column add-column-form\">\n            <input\n              type=\"text\"\n              placeholder=\"Column title\"\n              value={newColumnTitle}\n              onChange={(e) => setNewColumnTitle(e.target.value)}\n              autoFocus\n            />\n            <div className=\"add-column-actions\">\n              <button \n                className=\"add-btn\"\n                onClick={handleAddColumn}\n              >\n                Add Column\n              </button>\n              <button \n                className=\"cancel-btn\"\n                onClick={() => setShowAddColumn(false)}\n              >\n                <FaTimes />\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"kanban-column add-column\" onClick={() => setShowAddColumn(true)}>\n            <div className=\"add-column-button\">\n              <FaPlus />\n              <span>Add Column</span>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default KanbanBoard; "],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,OAA9B,EAAuCC,OAAvC,EAAgDC,WAAhD,EAA6DC,aAA7D,EAA4EC,OAA5E,EAAqFC,MAArF,EAA6FC,MAA7F,QAA2G,gBAA3G;AACA,OAAO,2BAAP;;;;AAEA,MAAMC,WAAW,GAAG,QASd;EAAA;;EAAA,IATe;IACnBC,KADmB;IAEnBC,QAFmB;IAGnBC,UAHmB;IAInBC,YAJmB;IAKnBC,YALmB;IAMnBC,YANmB;IAOnBC,cAPmB;IAQnBC;EARmB,CASf;EACJ,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,IAAD,CAA9C;EACA,MAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,IAAD,CAA9C;EACA,MAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC;IAAE0B,KAAK,EAAE,EAAT;IAAaC,WAAW,EAAE,EAA1B;IAA8BC,UAAU,EAAE,IAA1C;IAAgDC,QAAQ,EAAE,QAA1D;IAAoEC,OAAO,EAAE;EAA7E,CAAD,CAA9C;EACA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoChC,QAAQ,CAAC,KAAD,CAAlD;EACA,MAAM,CAACiC,cAAD,EAAiBC,iBAAjB,IAAsClC,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAACmC,YAAD,EAAeC,eAAf,IAAkCpC,QAAQ,CAAC,IAAD,CAAhD;EACA,MAAM,CAACqC,WAAD,EAAcC,cAAd,IAAgCtC,QAAQ,CAAC,IAAD,CAA9C;EAEA,MAAMuC,QAAQ,GAAGtC,MAAM,EAAvB;EACA,MAAMuC,QAAQ,GAAGvC,MAAM,EAAvB,CAVI,CAYJ;;EACA,MAAMwC,eAAe,GAAG,CAACC,CAAD,EAAIC,MAAJ,EAAYC,MAAZ,KAAuB;IAC7CL,QAAQ,CAACM,OAAT,GAAmB;MAAEF,MAAF;MAAUC;IAAV,CAAnB;IACAJ,QAAQ,CAACK,OAAT,GAAmBH,CAAC,CAACI,MAArB;IACAN,QAAQ,CAACK,OAAT,CAAiBE,gBAAjB,CAAkC,SAAlC,EAA6CC,aAA7C;IAEAC,UAAU,CAAC,MAAM;MACf5B,cAAc,CAACsB,MAAD,CAAd;IACD,CAFS,EAEP,CAFO,CAAV;IAIAD,CAAC,CAACQ,YAAF,CAAeC,OAAf,CAAuB,YAAvB,EAAqCR,MAArC;IACAD,CAAC,CAACQ,YAAF,CAAeE,aAAf,GAA+B,MAA/B;EACD,CAXD,CAbI,CA0BJ;;;EACA,MAAMJ,aAAa,GAAG,MAAM;IAC1B3B,cAAc,CAAC,IAAD,CAAd;IACAmB,QAAQ,CAACK,OAAT,CAAiBQ,mBAAjB,CAAqC,SAArC,EAAgDL,aAAhD;IACAT,QAAQ,CAACM,OAAT,GAAmB,IAAnB;IACAL,QAAQ,CAACK,OAAT,GAAmB,IAAnB;EACD,CALD,CA3BI,CAkCJ;;;EACA,MAAMS,cAAc,GAAIZ,CAAD,IAAO;IAC5BA,CAAC,CAACa,cAAF;IACAb,CAAC,CAACQ,YAAF,CAAeM,UAAf,GAA4B,MAA5B;EACD,CAHD,CAnCI,CAwCJ;;;EACA,MAAMC,UAAU,GAAG,CAACf,CAAD,EAAIgB,YAAJ,KAAqB;IACtChB,CAAC,CAACa,cAAF;IAEA,MAAMZ,MAAM,GAAGgB,QAAQ,CAACjB,CAAC,CAACQ,YAAF,CAAeU,OAAf,CAAuB,YAAvB,CAAD,CAAvB;IACA,MAAMC,YAAY,GAAGtB,QAAQ,CAACM,OAAT,CAAiBD,MAAtC;;IAEA,IAAIiB,YAAY,KAAKH,YAArB,EAAmC;MACjC5C,UAAU,CAAC6B,MAAD,EAASe,YAAT,CAAV;IACD;;IAEDrC,cAAc,CAAC,IAAD,CAAd;EACD,CAXD,CAzCI,CAsDJ;;;EACA,MAAMyC,aAAa,GAAIlB,MAAD,IAAY;IAChC,IAAI,CAACpB,WAAW,CAACE,KAAZ,CAAkBqC,IAAlB,EAAL,EAA+B;IAE/B,MAAMC,IAAI,GAAG,EACX,GAAGxC,WADQ;MAEXoB,MAFW;MAGXqB,EAAE,EAAEC,IAAI,CAACC,GAAL,EAHO;MAGK;MAChBC,QAAQ,EAAE,EAJC;MAKXC,WAAW,EAAE,EALF;MAMXC,OAAO,EAAE,CAAC;QAAEC,MAAM,EAAE,SAAV;QAAqBC,SAAS,EAAE,IAAIN,IAAJ,GAAWO,WAAX;MAAhC,CAAD;IANE,CAAb;IASA1D,YAAY,CAACiD,IAAD,CAAZ;IACAvC,cAAc,CAAC;MAAEC,KAAK,EAAE,EAAT;MAAaC,WAAW,EAAE,EAA1B;MAA8BC,UAAU,EAAE,IAA1C;MAAgDC,QAAQ,EAAE,QAA1D;MAAoEC,OAAO,EAAE;IAA7E,CAAD,CAAd;IACAP,cAAc,CAAC,IAAD,CAAd;EACD,CAfD,CAvDI,CAwEJ;;;EACA,MAAMmD,eAAe,GAAG,MAAM;IAC5B,IAAI,CAACzC,cAAc,CAAC8B,IAAf,EAAL,EAA4B;IAE5B7C,cAAc,CAACe,cAAD,CAAd;IACAC,iBAAiB,CAAC,EAAD,CAAjB;IACAF,gBAAgB,CAAC,KAAD,CAAhB;EACD,CAND,CAzEI,CAiFJ;;;EACA,MAAM2C,gBAAgB,GAAI9C,QAAD,IAAc;IACrC,QAAOA,QAAP,aAAOA,QAAP,uBAAOA,QAAQ,CAAE+C,WAAV,EAAP;MACE,KAAK,MAAL;QAAa,OAAO,eAAP;;MACb,KAAK,KAAL;QAAY,OAAO,cAAP;;MACZ;QAAS,OAAO,iBAAP;IAHX;EAKD,CAND,CAlFI,CA0FJ;;;EACA,MAAMC,eAAe,GAAI/C,OAAD,IAAa;IACnC,IAAI,CAACA,OAAL,EAAc,OAAO,EAAP;IAEd,MAAMgD,KAAK,GAAG,IAAIZ,IAAJ,EAAd;IACAY,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;IAEA,MAAMC,GAAG,GAAG,IAAId,IAAJ,CAASpC,OAAT,CAAZ;IACAkD,GAAG,CAACD,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB;IAEA,MAAME,QAAQ,GAAGD,GAAG,GAAGF,KAAvB;IACA,MAAMI,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAUH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAlB,CAAjB;IAEA,IAAIC,QAAQ,GAAG,CAAf,EAAkB,OAAO,cAAP;IAClB,IAAIA,QAAQ,KAAK,CAAjB,EAAoB,OAAO,YAAP;IACpB,IAAIA,QAAQ,IAAI,CAAhB,EAAmB,OAAO,WAAP;IACnB,OAAO,EAAP;EACD,CAhBD,CA3FI,CA6GJ;;;EACA,MAAMG,gBAAgB,GAAIrB,IAAD,IAAU;IACjChD,YAAY,CAACgD,IAAD,CAAZ;IACA1B,cAAc,CAAC,IAAD,CAAd;EACD,CAHD,CA9GI,CAmHJ;;;EACA,MAAMgD,UAAU,GAAIC,UAAD,IAAgB;IACjC,IAAI,CAACA,UAAL,EAAiB,OAAO,EAAP;IACjB,MAAMC,IAAI,GAAG,IAAItB,IAAJ,CAASqB,UAAT,CAAb;IACA,OAAOC,IAAI,CAACC,kBAAL,CAAwB,OAAxB,EAAiC;MAAEC,KAAK,EAAE,OAAT;MAAkBC,GAAG,EAAE;IAAvB,CAAjC,CAAP;EACD,CAJD;;EAMA,oBACE;IAAK,SAAS,EAAC,wBAAf;IAAA,uBACE;MAAK,SAAS,EAAC,cAAf;MAAA,WACG9E,QAAQ,CAAC+E,GAAT,CAAahD,MAAM,iBAClB;QAEE,SAAS,EAAC,eAFZ;QAGE,UAAU,EAAEU,cAHd;QAIE,MAAM,EAAGZ,CAAD,IAAOe,UAAU,CAACf,CAAD,EAAIE,MAAJ,CAJ3B;QAAA,wBAME;UAAK,SAAS,EAAC,sBAAf;UAAA,wBACE;YAAA,UAAKA;UAAL;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAM,SAAS,EAAC,YAAhB;YAAA,UAA8BhC,KAAK,CAACiF,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAAClD,MAAF,KAAaA,MAA/B,EAAuCmD;UAArE;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YACE,SAAS,EAAC,iBADZ;YAEE,OAAO,EAAE,MAAMxE,cAAc,CAACqB,MAAD,CAF/B;YAGE,cAAW,UAHb;YAAA,uBAKE,QAAC,MAAD;cAAA;cAAA;cAAA;YAAA;UALF;YAAA;YAAA;YAAA;UAAA,QAHF;QAAA;UAAA;UAAA;UAAA;QAAA,QANF,eAkBE;UAAK,SAAS,EAAC,iBAAf;UAAA,WACGhC,KAAK,CACHiF,MADF,CACS7B,IAAI,IAAIA,IAAI,CAACpB,MAAL,KAAgBA,MADjC,EAEEgD,GAFF,CAEM5B,IAAI;YAAA;;YAAA,oBACP;cAEE,SAAS,EAAG,aAAY5C,WAAW,KAAK4C,IAAI,CAACC,EAArB,GAA0B,UAA1B,GAAuC,EAAG,EAFpE;cAGE,SAAS,MAHX;cAIE,WAAW,EAAGvB,CAAD,IAAOD,eAAe,CAACC,CAAD,EAAIsB,IAAI,CAACC,EAAT,EAAarB,MAAb,CAJrC;cAAA,UAMGP,WAAW,KAAK2B,IAAI,CAACC,EAArB,gBACC;gBAAK,SAAS,EAAC,gBAAf;gBAAA,wBACE;kBACE,IAAI,EAAC,MADP;kBAEE,KAAK,EAAED,IAAI,CAACtC,KAFd;kBAGE,QAAQ,EAAGgB,CAAD,IAAO1B,YAAY,CAAC,EAAE,GAAGgD,IAAL;oBAAWtC,KAAK,EAAEgB,CAAC,CAACI,MAAF,CAASkD;kBAA3B,CAAD,CAH/B;kBAIE,SAAS,EAAC;gBAJZ;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAOE;kBACE,KAAK,EAAEhC,IAAI,CAACrC,WAAL,IAAoB,EAD7B;kBAEE,QAAQ,EAAGe,CAAD,IAAO1B,YAAY,CAAC,EAAE,GAAGgD,IAAL;oBAAWrC,WAAW,EAAEe,CAAC,CAACI,MAAF,CAASkD;kBAAjC,CAAD,CAF/B;kBAGE,SAAS,EAAC,uBAHZ;kBAIE,WAAW,EAAC;gBAJd;kBAAA;kBAAA;kBAAA;gBAAA,QAPF,eAaE;kBAAK,SAAS,EAAC,eAAf;kBAAA,wBACE;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADF,eAEE;oBACE,KAAK,EAAEhC,IAAI,CAACpC,UAAL,IAAmB,EAD5B;oBAEE,QAAQ,EAAGc,CAAD,IAAO1B,YAAY,CAAC,EAAE,GAAGgD,IAAL;sBAAWpC,UAAU,EAAEc,CAAC,CAACI,MAAF,CAASkD,KAAT,GAAiBrC,QAAQ,CAACjB,CAAC,CAACI,MAAF,CAASkD,KAAV,CAAzB,GAA4C;oBAAnE,CAAD,CAF/B;oBAAA,wBAIE;sBAAQ,KAAK,EAAC,EAAd;sBAAA;oBAAA;sBAAA;sBAAA;sBAAA;oBAAA,QAJF,EAKG7E,KAAK,CAACyE,GAAN,CAAUK,IAAI,iBACb;sBAAsB,KAAK,EAAEA,IAAI,CAAChC,EAAlC;sBAAA,UAAuCgC,IAAI,CAACC;oBAA5C,GAAaD,IAAI,CAAChC,EAAlB;sBAAA;sBAAA;sBAAA;oBAAA,QADD,CALH;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAFF;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAbF,eAyBE;kBAAK,SAAS,EAAC,eAAf;kBAAA,wBACE;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADF,eAEE;oBACE,KAAK,EAAED,IAAI,CAACnC,QAAL,IAAiB,QAD1B;oBAEE,QAAQ,EAAGa,CAAD,IAAO1B,YAAY,CAAC,EAAE,GAAGgD,IAAL;sBAAWnC,QAAQ,EAAEa,CAAC,CAACI,MAAF,CAASkD;oBAA9B,CAAD,CAF/B;oBAAA,wBAIE;sBAAA;oBAAA;sBAAA;sBAAA;sBAAA;oBAAA,QAJF,eAKE;sBAAA;oBAAA;sBAAA;sBAAA;sBAAA;oBAAA,QALF,eAME;sBAAA;oBAAA;sBAAA;sBAAA;sBAAA;oBAAA,QANF;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAFF;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAzBF,eAoCE;kBAAK,SAAS,EAAC,eAAf;kBAAA,wBACE;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADF,eAEE;oBACE,IAAI,EAAC,MADP;oBAEE,KAAK,EAAEhC,IAAI,CAAClC,OAAL,IAAgB,EAFzB;oBAGE,QAAQ,EAAGY,CAAD,IAAO1B,YAAY,CAAC,EAAE,GAAGgD,IAAL;sBAAWlC,OAAO,EAAEY,CAAC,CAACI,MAAF,CAASkD;oBAA7B,CAAD;kBAH/B;oBAAA;oBAAA;oBAAA;kBAAA,QAFF;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QApCF,eA4CE;kBAAK,SAAS,EAAC,mBAAf;kBAAA,wBACE;oBACE,SAAS,EAAC,eADZ;oBAEE,OAAO,EAAE,MAAM1D,cAAc,CAAC,IAAD,CAF/B;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADF,eAOE;oBACE,SAAS,EAAC,iBADZ;oBAEE,OAAO,EAAE,MAAMA,cAAc,CAAC,IAAD,CAF/B;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAPF;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QA5CF;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADD,gBA6DC;gBAAA,wBACE;kBAAK,SAAS,EAAC,aAAf;kBAAA,wBACE;oBAAK,SAAS,EAAG,iBAAgBqC,gBAAgB,CAACX,IAAI,CAACnC,QAAN,CAAgB,EAAjE;oBAAA,uBACE,QAAC,MAAD;sBAAA;sBAAA;sBAAA;oBAAA;kBADF;oBAAA;oBAAA;oBAAA;kBAAA,QADF,eAIE;oBAAK,SAAS,EAAC,qBAAf;oBAAA,wBACE;sBACE,SAAS,EAAC,kBADZ;sBAEE,OAAO,EAAE,MAAMO,eAAe,CAACD,YAAY,KAAK6B,IAAI,CAACC,EAAtB,GAA2B,IAA3B,GAAkCD,IAAI,CAACC,EAAxC,CAFhC;sBAGE,cAAW,WAHb;sBAAA,uBAKE,QAAC,WAAD;wBAAA;wBAAA;wBAAA;sBAAA;oBALF;sBAAA;sBAAA;sBAAA;oBAAA,QADF,EAQG9B,YAAY,KAAK6B,IAAI,CAACC,EAAtB,iBACC;sBAAK,SAAS,EAAC,WAAf;sBAAA,wBACE;wBAAQ,OAAO,EAAE,MAAM3B,cAAc,CAAC0B,IAAI,CAACC,EAAN,CAArC;wBAAA;sBAAA;wBAAA;wBAAA;wBAAA;sBAAA,QADF,eAIE;wBAAQ,SAAS,EAAC,YAAlB;wBAA+B,OAAO,EAAE,MAAMhD,YAAY,CAAC+C,IAAI,CAACC,EAAN,CAA1D;wBAAA;sBAAA;wBAAA;wBAAA;wBAAA;sBAAA,QAJF;oBAAA;sBAAA;sBAAA;sBAAA;oBAAA,QATJ;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAJF;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAyBE;kBAAI,SAAS,EAAC,YAAd;kBAAA,UAA4BD,IAAI,CAACtC;gBAAjC;kBAAA;kBAAA;kBAAA;gBAAA,QAzBF,EA0BGsC,IAAI,CAACrC,WAAL,iBACC;kBAAG,SAAS,EAAC,kBAAb;kBAAA,UAAiCqC,IAAI,CAACrC;gBAAtC;kBAAA;kBAAA;kBAAA;gBAAA,QA3BJ,eA6BE;kBAAK,SAAS,EAAC,aAAf;kBAAA,WACGqC,IAAI,CAAClC,OAAL,iBACC;oBAAK,SAAS,EAAG,iBAAgB+C,eAAe,CAACb,IAAI,CAAClC,OAAN,CAAe,EAA/D;oBAAA,wBACE,QAAC,OAAD;sBAAA;sBAAA;sBAAA;oBAAA,QADF,eAEE;sBAAA,UAAOwD,UAAU,CAACtB,IAAI,CAAClC,OAAN;oBAAjB;sBAAA;sBAAA;sBAAA;oBAAA,QAFF;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAFJ,EAOGkC,IAAI,CAACpC,UAAL,gBACC;oBAAK,SAAS,EAAC,eAAf;oBAAA,uBACE;sBACE,GAAG,EAAE,gBAAAT,KAAK,CAACgF,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACnC,EAAF,KAASD,IAAI,CAACpC,UAA9B,6DAA2CyE,MAA3C,KAAsD,oCAAmCC,kBAAkB,CAAC,iBAAAnF,KAAK,CAACgF,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACnC,EAAF,KAASD,IAAI,CAACpC,UAA9B,+DAA2CsE,IAA3C,KAAmD,MAApD,CAA4D,EAD9K;sBAEE,GAAG,kBAAE/E,KAAK,CAACgF,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACnC,EAAF,KAASD,IAAI,CAACpC,UAA9B,CAAF,iDAAE,aAA2CsE;oBAFlD;sBAAA;sBAAA;sBAAA;oBAAA;kBADF;oBAAA;oBAAA;oBAAA;kBAAA,QADD,gBAQC;oBAAK,SAAS,EAAC,iBAAf;oBAAA,uBACE,QAAC,MAAD;sBAAA;sBAAA;sBAAA;oBAAA;kBADF;oBAAA;oBAAA;oBAAA;kBAAA,QAfJ,EAmBG,sBAAAlC,IAAI,CAACK,WAAL,wEAAkB0B,MAAlB,IAA2B,CAA3B,iBACC;oBAAK,SAAS,EAAC,kBAAf;oBAAA,wBACE,QAAC,WAAD;sBAAA;sBAAA;sBAAA;oBAAA,QADF,eAEE;sBAAA,UAAO/B,IAAI,CAACK,WAAL,CAAiB0B;oBAAxB;sBAAA;sBAAA;sBAAA;oBAAA,QAFF;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QApBJ,EAyBG,mBAAA/B,IAAI,CAACI,QAAL,kEAAe2B,MAAf,IAAwB,CAAxB,iBACC;oBAAK,SAAS,EAAC,eAAf;oBAAA,wBACE,QAAC,aAAD;sBAAA;sBAAA;sBAAA;oBAAA,QADF,eAEE;sBAAA,WAAO/B,IAAI,CAACI,QAAL,CAAcyB,MAAd,CAAqBU,CAAC,IAAIA,CAAC,CAACC,IAA5B,EAAkCT,MAAzC,OAAkD/B,IAAI,CAACI,QAAL,CAAc2B,MAAhE;oBAAA;sBAAA;sBAAA;sBAAA;oBAAA,QAFF;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QA1BJ;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QA7BF;cAAA;YAnEJ,GACO/B,IAAI,CAACC,EADZ;cAAA;cAAA;cAAA;YAAA,QADO;UAAA,CAFV,CADH,EAyIG3C,WAAW,KAAKsB,MAAhB,iBACC;YAAK,SAAS,EAAC,eAAf;YAAA,wBACE;cACE,IAAI,EAAC,MADP;cAEE,WAAW,EAAC,YAFd;cAGE,KAAK,EAAEpB,WAAW,CAACE,KAHrB;cAIE,QAAQ,EAAGgB,CAAD,IAAOjB,cAAc,CAAC,EAAC,GAAGD,WAAJ;gBAAiBE,KAAK,EAAEgB,CAAC,CAACI,MAAF,CAASkD;cAAjC,CAAD,CAJjC;cAKE,SAAS;YALX;cAAA;cAAA;cAAA;YAAA,QADF,eAQE;cACE,WAAW,EAAC,aADd;cAEE,KAAK,EAAExE,WAAW,CAACG,WAFrB;cAGE,QAAQ,EAAGe,CAAD,IAAOjB,cAAc,CAAC,EAAC,GAAGD,WAAJ;gBAAiBG,WAAW,EAAEe,CAAC,CAACI,MAAF,CAASkD;cAAvC,CAAD;YAHjC;cAAA;cAAA;cAAA;YAAA,QARF,eAaE;cAAK,SAAS,EAAC,UAAf;cAAA,wBACE;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBACE,KAAK,EAAExE,WAAW,CAACI,UAAZ,IAA0B,EADnC;gBAEE,QAAQ,EAAGc,CAAD,IAAOjB,cAAc,CAAC,EAAC,GAAGD,WAAJ;kBAAiBI,UAAU,EAAEc,CAAC,CAACI,MAAF,CAASkD,KAAT,GAAiBrC,QAAQ,CAACjB,CAAC,CAACI,MAAF,CAASkD,KAAV,CAAzB,GAA4C;gBAAzE,CAAD,CAFjC;gBAAA,wBAIE;kBAAQ,KAAK,EAAC,EAAd;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAJF,EAKG7E,KAAK,CAACyE,GAAN,CAAUK,IAAI,iBACb;kBAAsB,KAAK,EAAEA,IAAI,CAAChC,EAAlC;kBAAA,UAAuCgC,IAAI,CAACC;gBAA5C,GAAaD,IAAI,CAAChC,EAAlB;kBAAA;kBAAA;kBAAA;gBAAA,QADD,CALH;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA;cAAA;cAAA;cAAA;YAAA,QAbF,eAyBE;cAAK,SAAS,EAAC,UAAf;cAAA,wBACE;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBACE,KAAK,EAAEzC,WAAW,CAACK,QADrB;gBAEE,QAAQ,EAAGa,CAAD,IAAOjB,cAAc,CAAC,EAAC,GAAGD,WAAJ;kBAAiBK,QAAQ,EAAEa,CAAC,CAACI,MAAF,CAASkD;gBAApC,CAAD,CAFjC;gBAAA,wBAIE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAJF,eAKE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QALF,eAME;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QANF;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA;cAAA;cAAA;cAAA;YAAA,QAzBF,eAoCE;cAAK,SAAS,EAAC,UAAf;cAAA,wBACE;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBACE,IAAI,EAAC,MADP;gBAEE,KAAK,EAAExE,WAAW,CAACM,OAFrB;gBAGE,QAAQ,EAAGY,CAAD,IAAOjB,cAAc,CAAC,EAAC,GAAGD,WAAJ;kBAAiBM,OAAO,EAAEY,CAAC,CAACI,MAAF,CAASkD;gBAAnC,CAAD;cAHjC;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA;cAAA;cAAA;cAAA;YAAA,QApCF,eA4CE;cAAK,SAAS,EAAC,cAAf;cAAA,wBACE;gBACE,SAAS,EAAC,SADZ;gBAEE,OAAO,EAAE,MAAMlC,aAAa,CAAClB,MAAD,CAF9B;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAOE;gBACE,SAAS,EAAC,YADZ;gBAEE,OAAO,EAAE,MAAMrB,cAAc,CAAC,IAAD,CAF/B;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAPF;YAAA;cAAA;cAAA;cAAA;YAAA,QA5CF;UAAA;YAAA;YAAA;YAAA;UAAA,QA1IJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAlBF;MAAA,GACOqB,MADP;QAAA;QAAA;QAAA;MAAA,QADD,CADH,EA+NGb,aAAa,gBACZ;QAAK,SAAS,EAAC,+BAAf;QAAA,wBACE;UACE,IAAI,EAAC,MADP;UAEE,WAAW,EAAC,cAFd;UAGE,KAAK,EAAEE,cAHT;UAIE,QAAQ,EAAGS,CAAD,IAAOR,iBAAiB,CAACQ,CAAC,CAACI,MAAF,CAASkD,KAAV,CAJpC;UAKE,SAAS;QALX;UAAA;UAAA;UAAA;QAAA,QADF,eAQE;UAAK,SAAS,EAAC,oBAAf;UAAA,wBACE;YACE,SAAS,EAAC,SADZ;YAEE,OAAO,EAAEtB,eAFX;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAOE;YACE,SAAS,EAAC,YADZ;YAEE,OAAO,EAAE,MAAM1C,gBAAgB,CAAC,KAAD,CAFjC;YAAA,uBAIE,QAAC,OAAD;cAAA;cAAA;cAAA;YAAA;UAJF;YAAA;YAAA;YAAA;UAAA,QAPF;QAAA;UAAA;UAAA;UAAA;QAAA,QARF;MAAA;QAAA;QAAA;QAAA;MAAA,QADY,gBAyBZ;QAAK,SAAS,EAAC,0BAAf;QAA0C,OAAO,EAAE,MAAMA,gBAAgB,CAAC,IAAD,CAAzE;QAAA,uBACE;UAAK,SAAS,EAAC,mBAAf;UAAA,wBACE,QAAC,MAAD;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAxPJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAoQD,CAvYD;;GAAMrB,W;;KAAAA,W;AAyYN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}